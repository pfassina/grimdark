"""Event system for publisher-subscriber communication.

This package contains the complete event-driven architecture:
- event_manager.py: Publisher-subscriber event routing and coordination  
- events.py: Event definitions for inter-system communication
"""

from .event_manager import EventManager, QueuedEvent, EventPriority
from .events import (
    GameEvent,
    EventType,
    TurnStarted,
    TurnEnded,
    UnitSpawned,
    UnitMoved,
    UnitDefeated,
    UnitAttacked,
    UnitDamaged,
    UnitTurnStarted,
    UnitTurnEnded,
    AttackTargetingSetup,
    AttackResolved,
    FriendlyFireDetected,
    ActionSelected,
    ActionExecuted,
    ActionCanceled,
    MovementCanceled,
    LogMessage,
    DebugMessage,
    LogSaveRequested,
    ManagerInitialized,
    GamePhaseChanged,
    ScenarioLoaded,
    GameStarted,
    GameEnded,
    BattlePhaseChanged,
    UIStateChanged,
    MoraleChanged,
    UnitPanicked,
    UnitRouted,
    UnitRallied,
    ObjectiveContext,
    PlayerActionRequested,
    TimelineProcessed,
    ObjectivesCheckRequested,
)

__all__ = [
    "EventManager",
    "QueuedEvent",
    "EventPriority",
    "GameEvent",
    "EventType",
    "TurnStarted",
    "TurnEnded",
    "UnitSpawned",
    "UnitMoved",
    "UnitDefeated",
    "UnitAttacked",
    "UnitDamaged",
    "UnitTurnStarted",
    "UnitTurnEnded",
    "AttackTargetingSetup",
    "AttackResolved",
    "FriendlyFireDetected",
    "ActionSelected",
    "ActionExecuted",
    "ActionCanceled",
    "MovementCanceled",
    "LogMessage",
    "DebugMessage",
    "LogSaveRequested",
    "ManagerInitialized",
    "GamePhaseChanged",
    "ScenarioLoaded",
    "GameStarted",
    "GameEnded",
    "BattlePhaseChanged",
    "UIStateChanged",
    "MoraleChanged",
    "UnitPanicked",
    "UnitRouted",
    "UnitRallied",
    "ObjectiveContext",
    "PlayerActionRequested",
    "TimelineProcessed",
    "ObjectivesCheckRequested",
]